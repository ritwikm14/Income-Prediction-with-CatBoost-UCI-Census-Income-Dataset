# -*- coding: utf-8 -*-
"""Income Prediction using CatBoost

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1kvYnSsBW5pqxjNSwUJ1Rwkqj4K47AKn-
"""

import pandas as pd
!pip install catboost
from catboost import CatBoostClassifier
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score, classification_report

# Load the data
data_url = 'https://archive.ics.uci.edu/ml/machine-learning-databases/adult/adult.data'



data = pd.read_csv(data_url, header=None, names=column_names, na_values=' ?', skipinitialspace=True)
data = data.dropna()

def resumetable(df):
    print(f"Dataset Shape: {df.shape}")
    summary = pd.DataFrame(df.dtypes, columns=['dtypes'])
    summary = summary.reset_index()
    summary['Name'] = summary['index']
    summary = summary[['Name', 'dtypes']]
    summary['Missing'] = df.isnull().sum().values
    summary['Uniques'] = df.nunique().values
    summary['First Value'] = df.loc[0].values
    summary['Second Value'] = df.loc[1].values
    return summary

result =resumetable(data)
result

target_col='income'
X=data.loc[:,data.columns != target_col]
y= data.loc[:,target_col]
# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.33, random_state=42)
X_train.head()

features= list[X_train.columns]
X_test.columns

cat_features=['age', 'workclass', 'fnlwgt', 'education', 'education-num',
       'marital-status', 'occupation', 'relationship', 'race', 'sex',
       'capital-gain', 'capital-loss', 'hours-per-week', 'native-country']

model= CatBoostClassifier(iterations=10,random_state=42,eval_metric='F1')

model.fit(X_train,y_train,cat_features=cat_features,plot=True,eval_set=(X_test,y_test))

y_pred= model.predict(X_test)

from sklearn.metrics import precision_score, f1_score
accuracy = accuracy_score(y_test, y_pred)
print(accuracy)

# Calculate the precision score with pos_label set to '>50K'
precision = precision_score(y_test, y_pred, pos_label='>50K')
print(precision)





